{% extends 'base.html.twig' %}

{% block title %}{{ article.title }}{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <!-- Article -->
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <!-- En-tête de l'article -->
        <div class="h-48 bg-gradient-to-r from-lime-500 to-green-600 relative overflow-hidden">
            <div class="absolute inset-0 flex items-center justify-center text-white text-8xl opacity-20">
                <i class="fas {% if article.category == 'mathematiques' %}fa-square-root-alt
                          {% elseif article.category == 'informatique' %}fa-laptop-code
                          {% elseif article.category == 'francais' %}fa-book
                          {% elseif article.category == 'anglais' %}fa-language
                          {% elseif article.category == 'arabe' %}fa-pen
                          {% else %}fa-graduation-cap{% endif %}"></i>
            </div>
            <div class="absolute bottom-4 left-6">
                <h1 class="text-3xl font-bold text-white mb-2 drop-shadow-lg">{{ article.title }}</h1>
                <div class="flex items-center gap-4 text-white/90">
                    <span class="flex items-center gap-2">
                        <i class="far fa-user"></i>
                        {{ article.user ? article.user.email : 'Anonyme' }}
                    </span>
                    <span>•</span>
                    <span class="flex items-center gap-2">
                        <i class="far fa-calendar-alt"></i>
                        {{ article.createdAt|date('d/m/Y') }}
                    </span>
                </div>
            </div>
            <div class="absolute top-4 right-4">
                <span class="bg-white/90 backdrop-blur-sm text-lime-600 px-4 py-2 rounded-full text-sm font-semibold shadow-lg">
                    {{ article.category|capitalize }}
                </span>
            </div>
        </div>

        <!-- Contenu de l'article -->
        <div class="p-8">
            <!-- Options de traduction -->
            <div class="flex items-center gap-4 mb-6">
                <select id="langueSelection" 
                        class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lime-500">
                    <option value="english">English</option>
                    <option value="arabic">العربية</option>
                </select>
                <button onclick="traduireContenu()" 
                        class="flex items-center px-4 py-2 bg-gradient-to-r from-lime-500 to-green-600 text-white rounded-lg hover:from-lime-600 hover:to-green-700 transition-all duration-300 shadow-md">
                    <i class="fas fa-language mr-2"></i>
                    Traduire
                </button>
            </div>

            <!-- Contenu -->
            <div class="prose max-w-none">
                {{ article.content|raw }}
            </div>
        </div>
    </div>

    <!-- Section commentaires -->
    <div class="mt-8">
        <h2 class="text-2xl font-bold mb-6 flex items-center gap-3">
            <i class="far fa-comments text-lime-500"></i>
            Commentaires ({{ article.comments|length }})
        </h2>

        <!-- Formulaire de commentaire -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-6">
            {{ form_start(form, {'attr': {'class': 'space-y-4'}}) }}
                <div class="relative">
                    {{ form_widget(form.content, {
                        'attr': {
                            'class': 'w-full p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lime-500 focus:border-lime-500',
                            'rows': '3',
                            'placeholder': 'Partagez votre avis...'
                        }
                    }) }}
                </div>
                <div class="flex justify-end">
                    <button type="submit" 
                            class="px-6 py-3 bg-gradient-to-r from-lime-500 to-green-600 text-white rounded-lg hover:from-lime-600 hover:to-green-700 transition-all duration-300 shadow-md">
                        <i class="far fa-paper-plane mr-2"></i>
                        Publier
                    </button>
                </div>
            {{ form_end(form) }}
        </div>

        <!-- Liste des commentaires -->
        <div class="space-y-4">
            {% for comment in article.comments|reverse %}
                <div class="bg-white rounded-xl shadow-lg p-6">
                    <div class="flex justify-between items-start mb-4">
                        <div class="flex items-center gap-3">
                            <div class="w-10 h-10 rounded-full bg-gradient-to-r from-lime-500 to-green-600 flex items-center justify-center text-white">
                                {{ comment.user.email|first|upper }}
                            </div>
                            <div>
                                <div class="font-semibold">{{ comment.user.email }}</div>
                                <div class="text-sm text-gray-500">{{ comment.createdAt|date('d/m/Y H:i') }}</div>
                            </div>
                        </div>
                        {% if app.user == comment.user %}
                            <div class="flex gap-2">
                                <button onclick="editComment({{ comment.id }})"
                                        class="text-lime-500 hover:text-lime-600">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <form method="post" action="{{ path('user_comment_delete', {'id': comment.id}) }}"
                                      onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce commentaire ?');"
                                      class="inline">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comment.id) }}">
                                    <button type="submit" class="text-red-500 hover:text-red-600">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        {% endif %}
                    </div>
                    <div id="comment-text-{{ comment.id }}">
                        {{ comment.content }}
                    </div>
                    <div id="edit-form-{{ comment.id }}" style="display: none;" class="mt-4">
                        <textarea class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lime-500 focus:border-lime-500"
                                rows="3">{{ comment.content }}</textarea>
                        <div class="flex justify-end gap-2 mt-3">
                            <button onclick="cancelEdit({{ comment.id }})"
                                    class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                                Annuler
                            </button>
                            <button onclick="saveEdit({{ comment.id }})"
                                    class="px-4 py-2 bg-gradient-to-r from-lime-500 to-green-600 text-white rounded-lg hover:from-lime-600 hover:to-green-700 transition-colors">
                                Enregistrer
                            </button>
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="bg-white rounded-xl shadow-lg p-8 text-center">
                    <div class="text-6xl text-gray-300 mb-4">
                        <i class="far fa-comments"></i>
                    </div>
                    <p class="text-gray-500">Soyez le premier à commenter cet article !</p>
                </div>
            {% endfor %}
        </div>
    </div>

    <!-- Messages flash -->
    {% for message in app.flashes('success') %}
        <div class="fixed bottom-4 right-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded shadow-lg" role="alert">
            {{ message }}
        </div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="fixed bottom-4 right-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded shadow-lg" role="alert">
            {{ message }}
        </div>
    {% endfor %}
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
// Sauvegarder le contenu original au chargement de la page
let originalContent = '';
document.addEventListener('DOMContentLoaded', function() {
    originalContent = document.querySelector('.prose').innerHTML;
});

function traduireContenu() {
    const langue = document.getElementById('langueSelection').value;
    const contentDiv = document.querySelector('.prose');
    
    if (!contentDiv) return;
    
    showLoading();
    
    fetch(`{{ path('article_translate', {'id': article.id, 'language': '__LANG__'}) }}`.replace('__LANG__', langue))
        .then(response => {
            if (!response.ok) {
                throw new Error('Erreur réseau');
            }
            return response.json();
        })
        .then(data => {
            hideLoading();
            if (data.success && data.translation) {
                contentDiv.innerHTML = `
                    <div class="translated-content">
                        <div class="mb-4">${data.translation}</div>
                        <button onclick="restoreOriginalContent()" 
                                class="px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2">
                            <i class="fas fa-undo"></i> 
                            Revenir au texte original
                        </button>
                    </div>
                `;
            } else {
                throw new Error(data.error || 'Erreur de traduction');
            }
        })
        .catch(error => {
            hideLoading();
            console.error('Erreur:', error);
            
            // Afficher un message d'erreur stylisé
            contentDiv.innerHTML = `
                <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-4">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <i class="fas fa-exclamation-circle text-red-500"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-red-700">
                                ${error.message || 'Une erreur est survenue lors de la traduction'}
                            </p>
                        </div>
                    </div>
                </div>
                ${originalContent}
            `;
            
            // Restaurer automatiquement après 3 secondes
            setTimeout(restoreOriginalContent, 3000);
        });
}

function restoreOriginalContent() {
    const contentDiv = document.querySelector('.prose');
    if (contentDiv && originalContent) {
        contentDiv.innerHTML = originalContent;
    }
}

function showLoading() {
    const contentDiv = document.querySelector('.prose');
    if (!contentDiv) return;
    
    contentDiv.insertAdjacentHTML('afterbegin', `
        <div class="loading-overlay fixed inset-0 bg-white/80 flex items-center justify-center z-50">
            <div class="text-center">
                <div class="animate-spin rounded-full h-12 w-12 border-4 border-lime-500 border-t-transparent mb-3"></div>
                <p class="text-gray-600">Traduction en cours...</p>
            </div>
        </div>
    `);
}

function hideLoading() {
    const overlay = document.querySelector('.loading-overlay');
    if (overlay) {
        overlay.remove();
    }
}

function editComment(commentId) {
    document.querySelector(`#comment-text-${commentId}`).style.display = 'none';
    document.querySelector(`#edit-form-${commentId}`).style.display = 'block';
}

function cancelEdit(commentId) {
    document.querySelector(`#comment-text-${commentId}`).style.display = 'block';
    document.querySelector(`#edit-form-${commentId}`).style.display = 'none';
}

function saveEdit(commentId) {
    const content = document.querySelector(`#edit-form-${commentId} textarea`).value;
    fetch(`/comment/${commentId}/edit`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ content })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.querySelector(`#comment-text-${commentId}`).textContent = content;
            cancelEdit(commentId);
        }
    });
}

// Animation des messages flash
document.addEventListener('DOMContentLoaded', function() {
    const flashMessages = document.querySelectorAll('[role="alert"]');
    flashMessages.forEach(message => {
        setTimeout(() => {
            message.style.opacity = '0';
            setTimeout(() => message.remove(), 500);
        }, 3000);
    });
});
</script>
{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
.tab-content {
    transition: all 0.3s ease-in-out;
}
.tab-btn {
    transition: all 0.2s ease-in-out;
    color: #6B7280;
    border-color: transparent;
}
.tab-btn:hover {
    color: #374151;
}
.tab-btn.active {
    color: #84CC16;
    border-color: #84CC16;
}
.prose {
    font-size: 1.125rem;
    line-height: 1.75;
    color: #374151;
}
.prose p {
    margin-bottom: 1.25em;
}
.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: .5;
    }
}

/* Animation pour le bouton de traduction */
@keyframes float {
    0% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-5px);
    }
    100% {
        transform: translateY(0px);
    }
}

button:hover i.fas.fa-language {
    animation: float 2s ease-in-out infinite;
}

/* Effet de gradient animé */
.bg-gradient-to-r {
    background-size: 200% auto;
    transition: 0.5s;
}

.bg-gradient-to-r:hover {
    background-position: right center;
}

.loading-overlay {
    backdrop-filter: blur(3px);
    z-index: 50;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

.translated-content {
    padding: 1rem;
    background-color: #f8fafc;
    border-radius: 0.5rem;
    border: 1px solid #e2e8f0;
    margin-bottom: 1rem;
}
</style>
{% endblock %}

