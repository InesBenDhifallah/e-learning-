{% extends 'base.html.twig' %}

{% block title %}{{ article.title }} - Alpha Education{% endblock %}

{% block body %}
    <!-- Section de l'article avec une bordure √©l√©gante -->
    <div class="mb-8 p-6 border-2 border-gray-300 rounded-lg shadow-md bg-white">
        <h1 class="text-3xl font-bold text-gray-800">{{ article.title }}</h1>
        <p class="text-gray-600 mb-4">Par <strong class="text-lime-600">{{ article.author }}</strong></p>
        <p class="mt-4 text-gray-700">{{ article.content }}</p>
    </div>

    <!-- Section des commentaires avec une bordure √©l√©gante -->
    <div class="mt-8 p-6 border-2 border-gray-300 rounded-lg shadow-md bg-white">
        <h2 class="text-2xl font-semibold mb-4">Commentaires</h2>
        <div class="space-y-4">
            {% for comment in comments %}
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <div class="flex justify-between items-start mb-4">
                        <div class="text-gray-600">
                            Par {{ comment.user.email }} | {{ comment.createdAt|date('d/m/Y H:i') }}
                        </div>
                        {% if app.user and comment.user == app.user %}
                            <div class="flex space-x-2">
                                <a href="{{ path('user_comment_edit', {'id': comment.id}) }}" 
                                   class="text-blue-500 hover:text-blue-700">
                                    ‚úèÔ∏è Modifier
                                </a>
                                <form method="post" action="{{ path('user_comment_delete', {'id': comment.id}) }}" 
                                      onsubmit="return confirm('√ätes-vous s√ªr de vouloir supprimer ce commentaire ?');" 
                                      style="display: inline-block;">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comment.id) }}">
                                    <button type="submit" class="text-red-500 hover:text-red-700">üóëÔ∏è Supprimer</button>
                                </form>
                            </div>
                        {% endif %}
                    </div>
                    <p class="text-gray-700">{{ comment.content }}</p>
                </div>
            {% else %}
                <p class="text-center text-gray-500">Aucun commentaire pour le moment.</p>
            {% endfor %}
        </div>
    </div>

    <!-- Affichage des messages d'erreur -->
    {% for message in app.flashes('error') %}
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4">
            {{ message }}
        </div>
    {% endfor %}

    <!-- Affichage des messages de succ√®s -->
    {% for message in app.flashes('success') %}
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4">
            {{ message }}
        </div>
    {% endfor %}

    <!-- Formulaire d'ajout de commentaire avec un style coh√©rent -->
    <div class="mt-8 p-6 border-2 border-gray-300 rounded-lg shadow-md bg-white">
        <h2 class="text-2xl font-semibold mb-4">Ajouter un commentaire</h2>
        
        {{ form_start(form, {'attr': {'class': 'space-y-4'}}) }}
            <div class="mb-4">
                {{ form_label(form.content, 'Votre commentaire', {
                    'label_attr': {
                        'class': 'block text-gray-700 text-sm font-bold mb-2'
                    }
                }) }}
                
                {{ form_widget(form.content, {
                    'attr': {
                        'class': 'comment-input shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'rows': '4'
                    }
                }) }}
                
                <div class="js-error-container"></div>
            </div>

            <button type="submit" 
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300">
                Publier le commentaire
            </button>
        {{ form_end(form) }}
    </div>

    <!-- Bouton de retour -->
    <div class="mt-4">
        <button onclick="history.back()" 
                class="bg-gray-500 text-white px-4 py-2 rounded-full font-bold shadow-md hover:bg-gray-600 transition duration-300 transform hover:scale-105">
            ‚¨Ö Retour
        </button>
    </div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const contentInput = document.querySelector('.comment-input');
    const submitButton = form.querySelector('button[type="submit"]');
    const errorDiv = document.createElement('div');
    errorDiv.className = 'text-red-500 text-sm mt-1 hidden';
    contentInput.parentNode.appendChild(errorDiv);

    // Fonction de validation
    function validateContent(content) {
        if (content.length < 2) {
            return 'Le commentaire doit contenir au moins 2 caract√®res';
        }
        if (content.length > 1000) {
            return 'Le commentaire ne peut pas d√©passer 1000 caract√®res';
        }
        if (!/^[a-zA-Z0-9\s\-_.,!?'"√Ä-√ø]+$/.test(content)) {
            return 'Le commentaire ne peut contenir que des lettres, chiffres et ponctuations basiques';
        }
        return '';
    }

    // Validation en temps r√©el
    contentInput.addEventListener('input', function() {
        const error = validateContent(this.value);
        if (error) {
            errorDiv.textContent = error;
            errorDiv.classList.remove('hidden');
            submitButton.disabled = true;
            submitButton.classList.add('opacity-50', 'cursor-not-allowed');
        } else {
            errorDiv.classList.add('hidden');
            submitButton.disabled = false;
            submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
        }
    });

    // Validation √† la soumission
    form.addEventListener('submit', function(e) {
        const error = validateContent(contentInput.value);
        if (error) {
            e.preventDefault();
            errorDiv.textContent = error;
            errorDiv.classList.remove('hidden');
        }
    });

    // Compteur de caract√®res
    const counterDiv = document.createElement('div');
    counterDiv.className = 'text-gray-500 text-sm mt-1';
    contentInput.parentNode.appendChild(counterDiv);

    function updateCounter() {
        const remaining = 1000 - contentInput.value.length;
        counterDiv.textContent = `${remaining} caract√®res restants`;
        if (remaining < 50) {
            counterDiv.classList.add('text-orange-500');
        } else {
            counterDiv.classList.remove('text-orange-500');
        }
    }

    contentInput.addEventListener('input', updateCounter);
    updateCounter(); // Initial count
});
</script>
{% endblock %}
